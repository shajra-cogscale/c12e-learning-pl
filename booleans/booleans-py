#!/usr/bin/env python


trueL = lambda a: lambda b: a

falseL = lambda a: lambda b: b

condL = lambda p: lambda ifTrue: lambda ifFalse: p(ifTrue)(ifFalse)

notL = lambda a: condL(a)(falseL)(trueL)

andL = lambda a: lambda b: condL(a)(condL(b)(trueL)(falseL))(falseL)

orL = lambda a: lambda b: condL(a)(trueL)(condL(b)(trueL)(falseL))

lToPy = lambda a: condL(a)(True)(False)

pyToL = lambda a: trueL if a else falseL


def test(expected, expr):
    print(expected == lToPy(expr))

test(False, notL(trueL ))
test(True , notL(falseL))

test(True , andL(trueL )(trueL ))
test(False, andL(falseL)(trueL ))
test(False, andL(trueL )(falseL))
test(False, andL(falseL)(falseL))

test(True , orL(trueL )(trueL ))
test(True , orL(falseL)(trueL ))
test(True , orL(trueL )(falseL))
test(False, orL(falseL)(falseL))
